Задача 1:

Да се дефинира клас BigInt, който представя цяло число с произволна дължина.
Той трябва да поддържа следните операции:
  * Създаване на обект от цяло число
  * Създаване на обект от от низ, съдържащ само десетични цифри(възможно е да съдържа минус на първата си позиция)
  * Оперататор за присвояване, който приема като десен аргумент обект от тип BigInt
  * Оперататор за присвояване, който приема като десен аргумент обект цяло число
  * Оператор +
  * Оператор +=
  * Префиксен и постфиксен оператор ++
  * Оператор -
  * Оператор -=
  * Префиксен и постфиксен оператор --
  * Оператор за изход <<
  * Оператор за вход >>

Примерна употреба:

    BigInt number("123");
    BigInt number2(77);
    cout << (number + number2); // Извежда 200
    BigInt number3 = number - number2;
    BigInt number4("-3");
    cout << (number3 - number4); // Извежда 49
    number4 += 6;
    cout << number4; // Извежда 3
    cout << number4++; // Извежда 3
    cout << ++number4; // Извежда 5
    number4 = 25 * 2;
    cout << number4; // Извежда 50
    BigInt number5;
    cin >> number5;// Потребителят въвежда 321
    cout << (number5 + 9); // Извежда 330


1. Декларацията и дефиницията на всеки клас да е разделена съответно в .h и .cpp файл
2. Бонус точки за използване на елемнти от C++11 (enum class, nullptr и други), 
   писане на const член-функции и параметри на функции и използване на референции