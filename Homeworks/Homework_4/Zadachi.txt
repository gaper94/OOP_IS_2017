Да се реализира система за обработка на пратки:

Всяка пратка се характеризира със следните данни:
  - Изпращач (име, адрес, телефонен номер)
  - Получател (име, адрес, телефонен номер)
  - Тип на доставката (обикновена, бърза, експресна)
  - Уникален идентификатор

Всеки тип пратка трябва да подържа следните операции:
  - Извеждане на информацията за пратката
  - Пресмятане на цената за доставка

Вашата система трябва да работи със следните типове пратки:

* Колет със следните характеристики
  - Тегло (минималното тегло за колет е 500гр.)
  - Стойност на колета
  - Размер на колета (дължина, широчина и височина).
    (минималните размери за колет са 40/40/20)
  
  Цената за доставка на колет се пресмята по следният начин:
    1. Смята се обема на колета и се дели на 6000 
    2. Теглото на колета се взима в грамове и се дели на 500
    3. От обявената стойност на колета се взима 1 процент допълнителна такса
    
    Цената за доставка е равна на 1 + 2 + 3
    Ако доставката е бърза, крайната цена се умножава по 1.1
    Ако доставката е експресна, крайната цена се умножава по 1.2
    
    Пример:
    
    Колет с размери 50/60/20, тегло 10 кг, стойност на пратката 100 лева, експресна доставка
        1. Обемът на пратката е (50 * 60 * 20 = 60000) / 6000 = 10 лева
        2. Теглото на колета в грамове е 10000 / 500 = 20 лева
        3. Стойността на колета е 100 лева => 1 лев

      Общо: (10 + 20 + 1) * 1.2 = 37.20 лв.
        

* Карго палет със следните характеристики:
  - Тип на палета (мини, евро или индустриален)
  - Специални изисквания (чупливи стоки и др.)
  
  Цената за доставка на карго палет се пресмята по следният начин:
     1. Цената е фиксирана спрямо типа на палета както следва:
        * мини палет - 50 лв.
        * евро палет - 75 лв.
        * индустриален - 200 лв.
     2. Ако има специални изисквания към пратката (например трябва камион с хладилна камера)
        цената на доставка се умножава по 1.5
        
        Ако доставката е бърза, крайната цена се умножава по 1.3
        Ако доставката е експресна, крайната цена се умножава по 1.5
        
     Пример:
     
     Пратка с евро палет, специално изискване за чупливи стоки и бърза доставка
        1. Евро палет - 75лв.
        2. Специално изискване за чупливи стоки - * 1.5
        3. Бърза доставка - * 1.3
        
        Общо: 75 * 1.5 * 1.3 = 146.25 лв.

Да се реализира пощенски клон, който се характеризира със следните данни 
и поддържа следната фунцкионалност:
  - Уникален идентификатор
  - Местоположение на клона (за улеснение приемаме, че имаме по един пощенски клон в населено място)
  - Брой изпратени/получени пратки до сега
  - Брой регистрирани потребители. Даден потребител е регистриран в пощенски клон
    ако е направил/получил поне една пратка
  - Списък от пощенски клонове до които може да доставя текущият пощенски клон
  - Изпращане на пратка - когато добавяме пратка в даден пощенски клон, трябва да можем
    да доставяме до пощенският клон на получателят, в противен случай доставката се отказва.
    Не трябва да се позволява изпращане/получаване на една пратка повече от един път
  - Намиране на изпратените/получените пратки по подаден потребител
  - Извършване на доствка
  - Проследяване на доставката по идентификатор на пратката
    Приемаме че една пратка е доставена ако присъства едновременно в пощенският
    клон на изпращача и получателя

Забележки:
    
1. Бонус точки за използване на елементи от C++11 (final, override, move семантика, ламбди) и шаблони
2. Декларацията и дефиницията на всеки клас да е разделена съответно в .h и .cpp файл
3. За всички класове, реализирайте само компонентите от голямата четворка, които смятате за необходими.
   (Имаме ли нужда от пратка, която не знаем кой я праща и до къде трябва да стигне ?)
4. Направете малка програма, която демонстрира употребата на написаните от вас класове
5. Много удобно би било да се реализира клас подобен на речник, който при подаден град 
   връща списък от градовете до които може да се направи доставка. Той също би ви помогнал
   за реализацията на пощенският клон (наприме регистрацията на потребители)
   За решението на задачата НЕ използвайте std::map от стандартната библиотека
6. Като идентификатор за потребителите може да използвате техните телефонни номера
