Ще използваме наготово класовете Person и BankAccount.

Да се имплементират класове SavingsAccount и CurrentAccount, наслещяващи BackAccount.

SavingAccount добавя информация за:
- лихвен процент на сметката;
- месечна такса за обслужване на сметката.

CurrentAccount добавя информация за:
- кредитен лимит;
- такса за едно теглене;
- пази история на тегленята.
Информацията, която описва едно теглене, е следната:
- час и дата на тегленето;
- изтеглена сума.
Подходящо е да се дефинира отделна структура, която да съдържа тази информация, например 
struct DraftInfo
{
	double draftAmount;
	char* date;  //or  int hours, minutes, seconds, day, month, year;

	//methods . . .
};  

като се очаква историята на тегленията да представлява масив от обекти на тази структура.

За тези два класа трябва да са дефинирани елементите на голямата четворка.

За класът  SavingAccount методът OwnerProfit() връща стойността на натрупаната за месец лихва,
като от тази стойност се приспадне месечната такса за обслужване.

За класът  CurrentAccount методът OwnerProfit() връща неположително число,
чиято абсолютна стойност е равна на таксата за теглене, умножена по броя на извършените тегления.


Да се дефинира клас Employee, наследяващ Person. Той добавя информация за: 
- месечна заплата на служителя;
- година постъпване на работа;
- длъжност(символен низ или стойност от изборим тип);
За този клас да се имплементират елементите от голямата четворка, както и get и set методи за собствените му полета.

Да се дефинира клас Bank, който се състои от :
- спестовни сметки;
- кредитни сметки;
- служители.
Всеки от масивите трябва да може да съдържа произволен брой обекти.
За този клас да се имплементират методите на голямата четворка, както и следните методи:
- за добавяне на спестовна сметка;
- за добавяне на кредитна сметка;
- за внасяне на дадена сума по дадена сметка(сметката е зададена чрез номера си);
- за теглене на дадена сума от дадена сметка(сметката е зададена чрез номера си);
- за премахване на сметка по даден номер (сметката може да е както спестовна, така и кредитна,
а също е възможно да не съществува сметка с дадения номер);
- за добавяне на служител;
- за премахване на служител по даден EГН;
- за отпечатване на информацията за всчки сметки на едно лице по даден неговия EГН;
- за отпечатване на имената на всички служители на банката, които имат кредитни сметки в нея.

